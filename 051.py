import eulerlib


def gen_List(n):
    """
    parameter: 
        n: a prime number, which is used to generate a list of a list of int 
    retrun:
        Two-dimensional list of integers which is generated from n
    """
    ret = []
    a = 1
    b = list('1' for n in range(len(str(n))))
    #  e.g. n = 1234 b = ['1','1','1','1']
    m = int(''.join(b), base=2)
    for i in range(1, m):
        c = format(i, 'b')
        # c will be 0001, 0010, 0011 ... 1110 (1110 at least one number no change)
        ans = get_list(str(n), c)
        # ans: a list of int, so every position in c ,which value is 1,
        # the value of the same position in n will be changed to 0,1,2,3 ... 9
        # e.g. n = 1234 , c = 1101, so ans = [ 1131, 2232, 3333, 4434, 5535, 6636, 7737, 8838, 9939]
        # in next iteration, c will be 1110 (increase by 1 )
        ret.append(ans)
    return ret


def get_list(s: str, c: int):
    """
    parameter:
        s: s string of a number to be computed
        c: a binary integer, such as 1101
    return:
        nums: a list of integers generated by replace every position by 0,1,2,3,...9 in s ,which is the same position of 1 in c. such as s = **3*, c = 1101
    """
    l = list(s)
    d = list(c)
    for i in range(len(d)):
        if d[i] == '1':
            l[i] = '*'
    s = ''.join(l)
    #  s = **3* (like that)
    nums = []
    for i in range(10):
        e = s.replace('*', str(i))
        j = int(e)
        if len(str(j)) == len(s):
            nums.append(int(e))
    return nums
    # return value like:[ 1131, 2232, 3333, 4434, 5535, 6636, 7737, 8838, 9939]


def test_get_list():
    a = 1
    b = int(''.join('1101'), base=2)
    c = format(b, 'b')
    print(c)
    print(get_list('1234', c))


def compute():
    primes = list(x for x in range(11, 999999) if eulerlib.is_prime(x))
    for x in primes:
        ans = gen_List(x)
        for i in ans:
            count = 0
            for j in i:
                if eulerlib.is_prime(j):
                    count += 1
            if count == 8:
                ans = list(x for x in i if eulerlib.is_prime(x))
                print(ans)
                return min(ans)


if __name__ == "__main__":
    # test_get_list()
    print(compute())
    # answer is 121313
